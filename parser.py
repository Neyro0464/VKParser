import vk_api
import requests
from datetime import datetime 
from dateutil.relativedelta import relativedelta
from DBconn import connection

#DOMAIN_LIST = ['incident_nsk', ...]

# Укажите ваши данные для авторизации
VK_TOKEN = '19ff385f19ff385f19ff385f901ade7549119ff19ff385f7eea6b22f6bc857365e56efc'
VERSION = '5.199'
#GROUP_ID = '99099155'
#NEWS_ID = '4430'

#------------ПОЛЯ ДЛЯ ЗАПОЛНЕНИЯ------------
OFFSET = 0 # сдвиг по постам
DOMAIN = 'incident_nsk' # Домен группы
COUNT = 30 # кол-во взятых постов за раз
PERIOD = 5 #период в днях за которые берем посты (текущяя дата - PERIOD)
CITY = 'Новосибирск'
#------------ПОЛЯ ДЛЯ ЗАПОЛНЕНИЯ------------

# Ключевые слова для поиска
wordFilt = {'Строительство': ['снос','отсутствие городской инфраструктуры','нехватка городской инфраструктуры','строительство дорог',
                              'строительство дом','нехватка инсоляции','против строительства','жалобы на шум','от стройки','нагрузка на инфраструктуру',
                              'плохой внешний вид','долгострой','борьба за участок','строительный конфликт','строительного конфликта','строительных конфликтов',
                              'снос ветхого жилья','строительство ЖК','инфраструктур','градостроитель','задержка сдачи','задержкой сдачи',
                              'нехватка социальных объектов в'], 
            
            'Экология': ['вырубка деревьев','вырубка деревьев','вредное производств','мусорный полигон',
                         'мусорные полигон','свалк', 'загрязнение водоемов',
                              'загрязнение рек','загрязнение озер','загрязнение болот','выброс отходов',
                              'загрязнение воздуха','грязный воздух','черного неба','черное небо','выбросы',
                              'неприятный запах','неприятным запахом','жители задыхаются','лесной пожар',
                              'лесным пожаром','браконьер','отстрел птиц','защита леса','пыль','мусор',
                              'реагенты','экологическая катастрофа','сжигание отходов','экологический конфликт',
                              'экологическим конфликтом','экоактивисты'],

            'Экономика':['бюджет', 'против трат', 'рост тарифов ЖКХ', 'росте тарифов на услуги ЖКХ',
                         'повышение тарифов ЖКХ','рост цен','повышение цен','не выплатили зарплату','лишили зарплаты','без зарплаты',
                         'коррупция','стало платн'],

            'Городское хозяйство':['мало парков', 'благоустройство','нехватка парково','тротуар','спортивных площадок',
                                   'спортивные площадки','парковка на газоне','парковать на газоне','паркуется на газоне',
                                   'уборка улиц','уборке улиц','плохая уборка улиц',
                                   'скользк','мурал','обрезка деревьев','вид здан','ремонт фасад','выгул собак','выгула собак',
                                   'качество дорог','качество дорог','озеленени','парковочны','проблемы с общественным транспорт',
                                   'проблемы городского транспорта','нехватка автобус','мало автобус','неудобный маршрут',
                                   'ветхое жилье','авария на кательной','на теплосети','проблемы с отоплен','авария на канализац',
                                   'аварий канализационн','проблемы с электроснабжением','авария на линии электропередач',
                                   'проблемы с водоснабжен','нет горячей воды','не будет горячей воды','городская политика',
                                   'городской политик','шум','аварийное жиль','аварийным жиль'],

            'Социальная сфера':['нехватка больниц','нехватке больниц','нехватка поликлиник','нехватке поликлиник',
                                'нехватка школ','нехватке школ','нехватка детск','нехватке детск',
                                'мест в больниц','нехватка врачей','переполненность','недоступность инфраструктур',
                                'отсутствие пандус','увольнение учителей','состояние школ','не хватает мест в дет',
                                'бездомн','сирот','многодетн'],

            'Соседство, среда проживания':['конфликт сосед','конфликт с сосед','столкновение сосед','столкновение интересов сосед'],

            'Культура и общественные ценности':['защита ценностей','угроза религи','угроза идентичн',
                                                'угроза этнич','угроза гражданск','срывов культурн','срыв культурн',
                                                'отмене концерт','отмена концерт',
                                                'запретить меропри', 'запретил меропр','запретили меропр','отмена выстав',
                                                'поддержание традиций','снос памятн','демонтаж памятн','перенос памятн',
                                                'сохранение памятников архитектур',
                                                'против сноса памят','против демонтажа','заброшенные памятник','заброшенный памятн',
                                                'инфраструктура культуры','цены в театр','объекты культуры',
                                                'с представителями других субкультур','другой субкультуры',
                                                'ЧВК редан','аниме','офник','квадробер','скинхед'],

            'Этнические и религиозные отношения':['стычки между диаспорами','столкновение диаспор','против мигрантов',
                                                  'межнациональный конфликт','межнациональному конфликт','этнический конфликт',
                                                  'националист','жители против мигрантов',
                                                  'межнациональных конфликт', 'этнические столкновен', 'цыган','поведение мигрант',
                                                  'против строительства мечети','женщины в хиджаб', 'женщина в хиджаб',
                                                  'нелегальными мигрант','нелегалы','нелегальной миграц','нелегальных мигрант'],

            'Управление городом':['власть не реагирует','отсутствие реакции властей','администрация не реагирует',
                                  'администрация бездействует','администрация не отреагиров','не решает администрац','выборы мэра',
                                  'главы города', 'в отставку', 'глава города', 'главу города', 'отстранение мэра',
                                  'отставка мэра','проблемы администрац',
                                  'недовольство горожан', 'недовольство жителей', 'жители недовольны', 'неэффективные меры'],} 

# Категории постов и счетчик по каждому из постов
counter_dict = {'Строительство': 0, 
            'Экология': 0,
            'Экономика':0,
            'Городское хозяйство':0,
             'Социальная сфера':0,
            'Соседство, среда проживания':0,
            'Культура и общественные ценности':0,
            'Этнические и религиозные отношения':0,
            'Управление городом':0
            }

# Авторизация
vk_session = vk_api.VkApi(token=VK_TOKEN)
vk = vk_session.get_api()
# Получения сведений(id, name, screen_name) о сообществе по домену
group_info = vk.groups.getById(group_ids=DOMAIN)
# Получение id владельца сообщества
owner_id = -int(group_info[0]['id'])  # Указываем ID сообщества с минусом


# ------------||Работа с комментариями||----------------

# Получение комментариев к новости
def get_comments(owner_id, post_id, offset=0, count=100):
    response = vk.wall.getComments(owner_id=owner_id, post_id=post_id, offset=offset, count=count)
    return response

# Парсинг комментариев
def parse_comments(owner_id, post_id):
    comments = []
    offset = 0
    while True:
        response = get_comments(owner_id, post_id, offset)
        if not response['items']:
            break
        comments.extend(response['items'])
        offset += 100
    return comments
# ------------||Работа с комментариями||----------------


#Добавить цикл который будет делать смещение постов пока не дойдет до нужной даты
#(Возможно сделать через timestamp - year)

# Использование метода wall.get через запрос к странице, чтобы получить id постов.
def get_posts(VK_TOKEN, VERSION, DOMAIN, OFFSET, COUNT):
    response2 = requests.get('https://api.vk.com/method/wall.get',
    params={'access_token': VK_TOKEN,
            'v': VERSION,
            #'owner_id': owner_id,
            'domain': DOMAIN,
            'offset': OFFSET,
            'count': COUNT
            })
    data = response2.json()['response']['items']
    return data



#добавить запись в файл/ворд

# Для каждого поста выводим комментарии
def parse_wall(VK_TOKEN, VERSION, DOMAIN, OFFSET, COUNT):
    exitFlag = False
    counter = 0
    #for domain in domain_list???
    while not exitFlag:
        data = get_posts(VK_TOKEN, VERSION, DOMAIN, OFFSET, COUNT)
        for post in data:
            counter +=1
            if datetime.fromtimestamp(post['date']) > datetime.today() - relativedelta(days=PERIOD): # пока дата поста больше требуемой, продолжаем
                #post_id = int(post['id'])

                #------------блок вывода информации в консоль------------
                print('ID поста: ', post['id'], ':::', group_info[0]['name'], ':::', f"https://vk.com/{group_info[0]['screen_name']}")
                addres = f"https://vk.com/wall-{group_info[0]['id']}_{post['id']}"
                print('Ссылка на пост: ', addres)
                print('Дата выхода поста: ',datetime.fromtimestamp(post['date']), 'по нск', '\n')
                #------------блок вывода информации в консоль------------

                #comments = parse_comments(owner_id, post_id)
                if wordFilt: #Если список ключевых слов не пуст, то ищем каждое ключевое слово в тексте КАЖДОГО поста
                    for key in wordFilt.keys():
                        for word in wordFilt[key]:
                            text = post['text'].casefold()
                            if word in text:
                                counter_dict[key] += 1
                                # Подключение к базе и занос информации туда
                                connection(post['id'], key, datetime.fromtimestamp(post['date']), 
                                           group_info[0]['id'], addres, word, group_info[0]['name'], f"https://vk.com/{group_info[0]['screen_name']}", CITY)
                                #print(post['text']) # вывод текста комментария
                                break
                        print (key, counter_dict[key])
                # else: #Если пуст, то выводим текст поста
                #     print(post['text'])
                print("-" * 40, '\n')
            else:
                exitFlag = True
                break
        OFFSET = OFFSET + COUNT
    print (counter_dict)
    print(counter)

#connection()          
parse_wall(VK_TOKEN, VERSION, DOMAIN, OFFSET, COUNT)

# # Вывод комментариев
#     for comment in comments:
#         print(f"Comment ID: {comment['id']}")
#         print(f"Author: {comment['from_id']}")
#         print(f"Text: {comment['text']}")
#         print("-" * 40)
